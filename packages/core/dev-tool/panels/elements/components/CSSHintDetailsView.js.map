{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/elements/components/CSSHintDetailsView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\n\nimport cssHintDetailsViewStyles from './cssHintDetailsView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for button that redirects to CSS property documentation.\n   */\n    learnMore: 'Learn More',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/CSSHintDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives} = LitHtml;\n\ninterface Hint {\n  getMessage(): string;\n  getPossibleFixMessage(): string|null;\n  getLearnMoreLink(): string|undefined;\n}\n\nexport class CSSHintDetailsView extends HTMLElement {\n    static readonly litTagName = LitHtml.literal`devtools-css-hint-details-view`;\n    readonly #shadow = this.attachShadow({mode: 'open'});\n    readonly #authoringHint: Hint;\n\n    constructor(authoringHint: Hint) {\n        super();\n        this.#authoringHint = authoringHint;\n        this.#shadow.adoptedStyleSheets = [cssHintDetailsViewStyles];\n        this.#render();\n    }\n\n    #render(): void {\n      const link = this.#authoringHint.getLearnMoreLink();\n      // clang-format off\n      render(html`\n        <div class=\"hint-popup-wrapper\">\n          <div class=\"hint-popup-reason\">\n            ${Directives.unsafeHTML(this.#authoringHint.getMessage())}\n          </div>\n          ${this.#authoringHint.getPossibleFixMessage() ? html`\n              <div class=\"hint-popup-possible-fix\">\n                  ${Directives.unsafeHTML(this.#authoringHint.getPossibleFixMessage())}\n                  ${link ? html`\n                      <x-link id=\"learn-more\" href=${link} class=\"clickable underlined unbreakable-text\"}>\n                          ${i18nString(UIStrings.learnMore)}\n                      </x-link>\n                  `: ''}\n              </div>\n          ` : ''}\n        </div>\n      `, this.#shadow, {\n        host: this,\n      });\n      // clang-format on\n    }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-css-hint-details-view', CSSHintDetailsView);\n\ndeclare global {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interface HTMLElementTagNameMap {\n      'devtools-css-hint-details-view': CSSHintDetailsView;\n    }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAId,WAAW;AAAA;AAEf,MAAM,OAAO,KAAK,KAAK,kBAAkB,oDAAoD;AAC7F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,MAAM,EAAC,QAAQ,MAAM,eAAc;AAQ5B,wCAAiC,YAAY;AAAA,SAChC,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA;AAAA,EAG5C,YAAY,eAAqB;AAC7B;AACA,0BAAsB;AACtB,iBAAa,qBAAqB,CAAC;AACnC;AAAA;AAAA,YAGY;AACd,UAAM,OAAO,oBAAoB;AAEjC,WAAO;AAAA;AAAA;AAAA,cAGC,WAAW,WAAW,oBAAoB;AAAA;AAAA,YAE5C,oBAAoB,0BAA0B;AAAA;AAAA,oBAEtC,WAAW,WAAW,oBAAoB;AAAA,oBAC1C,OAAO;AAAA,qDAC0B;AAAA,4BACzB,WAAW,UAAU;AAAA;AAAA,sBAE5B;AAAA;AAAA,cAEP;AAAA;AAAA,SAEL,cAAc;AAAA,MACf,MAAM;AAAA;AAAA;AAAA;AAMd,iBAAiB,eAAe,gBAAgB,kCAAkC;",
  "names": []
}
