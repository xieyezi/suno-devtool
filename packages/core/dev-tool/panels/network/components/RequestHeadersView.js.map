{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/network/components/RequestHeadersView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Persistence from '../../../models/persistence/persistence.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport * as NetworkForward from '../../../panels/network/forward/forward.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Sources from '../../sources/sources.js';\n\nimport {type RequestHeaderSectionData, RequestHeaderSection} from './RequestHeaderSection.js';\nimport {\n  type ResponseHeaderSectionData,\n  ResponseHeaderSection,\n  RESPONSE_HEADER_SECTION_DATA_KEY,\n} from './ResponseHeaderSection.js';\n\nimport requestHeadersViewStyles from './RequestHeadersView.css.js';\n\nconst RAW_HEADER_CUTOFF = 3000;\nconst {render, html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  fromDiskCache: '(from disk cache)',\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  fromMemoryCache: '(from memory cache)',\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  fromPrefetchCache: '(from prefetch cache)',\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  fromServiceWorker: '(from `service worker`)',\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  fromSignedexchange: '(from signed-exchange)',\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  fromWebBundle: '(from Web Bundle)',\n  /**\n   *@description Section header for a list of the main aspects of a http request\n   */\n  general: 'General',\n  /**\n   *@description Label for a link from the network panel's headers view to the file in which\n   * header overrides are defined in the sources panel.\n   */\n  headerOverrides: 'Header overrides',\n  /**\n   *@description Label for a checkbox to switch between raw and parsed headers\n   */\n  raw: 'Raw',\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  referrerPolicy: 'Referrer Policy',\n  /**\n   *@description Text in Network Log View Columns of the Network panel\n   */\n  remoteAddress: 'Remote Address',\n  /**\n   *@description Text in Request Headers View of the Network panel\n   */\n  requestHeaders: 'Request Headers',\n  /**\n   *@description The HTTP method of a request\n   */\n  requestMethod: 'Request Method',\n  /**\n   *@description The URL of a request\n   */\n  requestUrl: 'Request URL',\n  /**\n   *@description A context menu item in the Network Log View Columns of the Network panel\n   */\n  responseHeaders: 'Response Headers',\n  /**\n   *@description Title text for a link to the Sources panel to the file containing the header override definitions\n   */\n  revealHeaderOverrides: 'Reveal header override definitions',\n  /**\n   *@description Text to show more content\n   */\n  showMore: 'Show more',\n  /**\n   *@description HTTP response code\n   */\n  statusCode: 'Status Code',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/components/RequestHeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class RequestHeadersView extends UI.Widget.VBox {\n  readonly #requestHeadersComponent = new RequestHeadersComponent();\n  readonly #request: SDK.NetworkRequest.NetworkRequest;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.#request = request;\n    this.contentElement.appendChild(this.#requestHeadersComponent);\n  }\n\n  wasShown(): void {\n    this.#request.addEventListener(SDK.NetworkRequest.Events.RemoteAddressChanged, this.#refreshHeadersView, this);\n    this.#request.addEventListener(SDK.NetworkRequest.Events.FinishedLoading, this.#refreshHeadersView, this);\n    this.#request.addEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged, this.#refreshHeadersView, this);\n    this.#request.addEventListener(\n        SDK.NetworkRequest.Events.ResponseHeadersChanged, this.#resetAndRefreshHeadersView, this);\n    this.#refreshHeadersView();\n  }\n\n  willHide(): void {\n    this.#request.removeEventListener(SDK.NetworkRequest.Events.RemoteAddressChanged, this.#refreshHeadersView, this);\n    this.#request.removeEventListener(SDK.NetworkRequest.Events.FinishedLoading, this.#refreshHeadersView, this);\n    this.#request.removeEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged, this.#refreshHeadersView, this);\n    this.#request.removeEventListener(\n        SDK.NetworkRequest.Events.ResponseHeadersChanged, this.#resetAndRefreshHeadersView, this);\n  }\n\n  #resetAndRefreshHeadersView(): void {\n    this.#request.deleteAssociatedData(RESPONSE_HEADER_SECTION_DATA_KEY);\n    this.#requestHeadersComponent.data = {\n      request: this.#request,\n    };\n  }\n\n  #refreshHeadersView(): void {\n    this.#requestHeadersComponent.data = {\n      request: this.#request,\n    };\n  }\n\n  revealHeader(section: NetworkForward.UIRequestLocation.UIHeaderSection, header?: string): void {\n    this.#requestHeadersComponent.data = {\n      request: this.#request,\n      toReveal: {section, header: header},\n    };\n  }\n}\n\nexport interface RequestHeadersComponentData {\n  request: SDK.NetworkRequest.NetworkRequest;\n  toReveal?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, header?: string};\n}\n\nexport class RequestHeadersComponent extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-request-headers`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #request?: Readonly<SDK.NetworkRequest.NetworkRequest>;\n  #showResponseHeadersText = false;\n  #showRequestHeadersText = false;\n  #showResponseHeadersTextFull = false;\n  #showRequestHeadersTextFull = false;\n  #toReveal?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, header?: string} = undefined;\n  readonly #workspace = Workspace.Workspace.WorkspaceImpl.instance();\n\n  set data(data: RequestHeadersComponentData) {\n    this.#request = data.request;\n    this.#toReveal = data.toReveal;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [requestHeadersViewStyles];\n    this.#workspace.addEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAddedOrRemoved, this);\n    this.#workspace.addEventListener(\n        Workspace.Workspace.Events.UISourceCodeRemoved, this.#uiSourceCodeAddedOrRemoved, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('persistenceNetworkOverridesEnabled')\n        .addChangeListener(this.#render, this);\n  }\n\n  disconnectedCallback(): void {\n    this.#workspace.removeEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAddedOrRemoved, this);\n    this.#workspace.removeEventListener(\n        Workspace.Workspace.Events.UISourceCodeRemoved, this.#uiSourceCodeAddedOrRemoved, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('persistenceNetworkOverridesEnabled')\n        .removeChangeListener(this.#render, this);\n  }\n\n  #uiSourceCodeAddedOrRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    if (this.#getHeaderOverridesFileUrl() === event.data.url()) {\n      this.#render();\n    }\n  }\n\n  #render(): void {\n    if (!this.#request) {\n      return;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      ${this.#renderGeneralSection()}\n      ${this.#renderResponseHeaders()}\n      ${this.#renderRequestHeaders()}\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #renderResponseHeaders(): LitHtml.LitTemplate {\n    if (!this.#request) {\n      return LitHtml.nothing;\n    }\n\n    const toggleShowRaw = (): void => {\n      this.#showResponseHeadersText = !this.#showResponseHeadersText;\n      this.#render();\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <${Category.litTagName}\n        @togglerawevent=${toggleShowRaw}\n        .data=${{\n          name: 'responseHeaders',\n          title: i18nString(UIStrings.responseHeaders),\n          headerCount: this.#request.sortedResponseHeaders.length,\n          checked: this.#request.responseHeadersText ? this.#showResponseHeadersText : undefined,\n          additionalContent: this.#renderHeaderOverridesLink(),\n          forceOpen: this.#toReveal?.section === NetworkForward.UIRequestLocation.UIHeaderSection.Response,\n        } as CategoryData}\n        aria-label=${i18nString(UIStrings.responseHeaders)}\n      >\n        ${this.#showResponseHeadersText ?\n            this.#renderRawHeaders(this.#request.responseHeadersText, true) : html`\n          <${ResponseHeaderSection.litTagName} .data=${{\n            request: this.#request,\n            toReveal: this.#toReveal,\n          } as ResponseHeaderSectionData}></${ResponseHeaderSection.litTagName}>\n        `}\n      </${Category.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderHeaderOverridesLink(): LitHtml.LitTemplate {\n    const overrideable = Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.HEADER_OVERRIDES);\n    if (!overrideable || !this.#workspace.uiSourceCodeForURL(this.#getHeaderOverridesFileUrl())) {\n      return LitHtml.nothing;\n    }\n\n    const overridesSetting: Common.Settings.Setting<boolean> =\n        Common.Settings.Settings.instance().moduleSetting('persistenceNetworkOverridesEnabled');\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    const fileIcon = overridesSetting.get() ? html`\n      <${IconButton.Icon.Icon.litTagName} class=\"inline-icon purple-dot\" .data=${{\n          iconName: 'file-sync_icon',\n          width: '11px',\n          height: '13px',\n        } as IconButton.Icon.IconData}>\n      </${IconButton.Icon.Icon.litTagName}>` : html`\n      <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${{\n          iconName: 'file_icon',\n          color: 'var(--color-text-primary)',\n          width: '12px',\n          height: '12px',\n        } as IconButton.Icon.IconData}>\n      </${IconButton.Icon.Icon.litTagName}>`;\n    // clang-format on\n\n    const revealHeadersFile = (event: Event): void => {\n      event.preventDefault();\n      const uiSourceCode = this.#workspace.uiSourceCodeForURL(this.#getHeaderOverridesFileUrl());\n      if (uiSourceCode) {\n        Sources.SourcesPanel.SourcesPanel.instance().showUISourceCode(uiSourceCode);\n      }\n    };\n\n    return html`\n      <x-link @click=${revealHeadersFile} class=\"link devtools-link\" title=${UIStrings.revealHeaderOverrides}>\n        ${fileIcon}${i18nString(UIStrings.headerOverrides)}\n      </x-link>\n    `;\n  }\n\n  #getHeaderOverridesFileUrl(): Platform.DevToolsPath.UrlString {\n    if (!this.#request) {\n      return Platform.DevToolsPath.EmptyUrlString;\n    }\n    const fileUrl = Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().fileUrlFromNetworkUrl(\n        this.#request.url(), /* ignoreInactive */ true);\n    return fileUrl.substring(0, fileUrl.lastIndexOf('/')) + '/' +\n        Persistence.NetworkPersistenceManager.HEADERS_FILENAME as Platform.DevToolsPath.UrlString;\n  }\n\n  #renderRequestHeaders(): LitHtml.LitTemplate {\n    if (!this.#request) {\n      return LitHtml.nothing;\n    }\n    const requestHeadersText = this.#request.requestHeadersText();\n\n    const toggleShowRaw = (): void => {\n      this.#showRequestHeadersText = !this.#showRequestHeadersText;\n      this.#render();\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <${Category.litTagName}\n        @togglerawevent=${toggleShowRaw}\n        .data=${{\n          name: 'requestHeaders',\n          title: i18nString(UIStrings.requestHeaders),\n          headerCount: this.#request.requestHeaders().length,\n          checked: requestHeadersText? this.#showRequestHeadersText : undefined,\n          forceOpen: this.#toReveal?.section === NetworkForward.UIRequestLocation.UIHeaderSection.Request,\n        } as CategoryData}\n        aria-label=${i18nString(UIStrings.requestHeaders)}\n      >\n        ${(this.#showRequestHeadersText && requestHeadersText) ?\n            this.#renderRawHeaders(requestHeadersText, false) : html`\n          <${RequestHeaderSection.litTagName} .data=${{\n            request: this.#request,\n            toReveal: this.#toReveal,\n          } as RequestHeaderSectionData}></${RequestHeaderSection.litTagName}>\n        `}\n      </${Category.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderRawHeaders(rawHeadersText: string, forResponseHeaders: boolean): LitHtml.TemplateResult {\n    const trimmed = rawHeadersText.trim();\n    const showFull = forResponseHeaders ? this.#showResponseHeadersTextFull : this.#showRequestHeadersTextFull;\n    const isShortened = !showFull && trimmed.length > RAW_HEADER_CUTOFF;\n\n    const showMore = ():void => {\n      if (forResponseHeaders) {\n        this.#showResponseHeadersTextFull = true;\n      } else {\n        this.#showRequestHeadersTextFull = true;\n      }\n      this.#render();\n    };\n\n    const onContextMenuOpen = (event: Event): void => {\n      const showFull = forResponseHeaders ? this.#showResponseHeadersTextFull : this.#showRequestHeadersTextFull;\n      if (!showFull) {\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const section = contextMenu.newSection();\n        section.appendItem(i18nString(UIStrings.showMore), showMore);\n        void contextMenu.show();\n      }\n    };\n\n    const addContextMenuListener = (el: Element):void => {\n      if (isShortened) {\n        el.addEventListener('contextmenu', onContextMenuOpen);\n      }\n    };\n\n    return html`\n      <div class=\"row raw-headers-row\" on-render=${ComponentHelpers.Directives.nodeRenderedCallback(addContextMenuListener)}>\n        <div class=\"raw-headers\">${isShortened ? trimmed.substring(0, RAW_HEADER_CUTOFF) : trimmed}</div>\n        ${isShortened ? html`\n          <${Buttons.Button.Button.litTagName}\n            .size=${Buttons.Button.Size.SMALL}\n            .variant=${Buttons.Button.Variant.SECONDARY}\n            @click=${showMore}\n          >${i18nString(UIStrings.showMore)}</${Buttons.Button.Button.litTagName}>\n        ` : LitHtml.nothing}\n      </div>\n    `;\n  }\n\n  #renderGeneralSection(): LitHtml.LitTemplate {\n    if (!this.#request) {\n      return LitHtml.nothing;\n    }\n\n    const statusClasses = [];\n    if (this.#request.statusCode < 300 || this.#request.statusCode === 304) {\n      statusClasses.push('green-circle');\n    } else if (this.#request.statusCode < 400) {\n      statusClasses.push('yellow-circle');\n    } else {\n      statusClasses.push('red-circle');\n    }\n\n    let statusText = this.#request.statusCode + ' ' + this.#request.statusText;\n    if (this.#request.cachedInMemory()) {\n      statusText += ' ' + i18nString(UIStrings.fromMemoryCache);\n      statusClasses.push('status-with-comment');\n    } else if (this.#request.fetchedViaServiceWorker) {\n      statusText += ' ' + i18nString(UIStrings.fromServiceWorker);\n      statusClasses.push('status-with-comment');\n    } else if (this.#request.redirectSourceSignedExchangeInfoHasNoErrors()) {\n      statusText += ' ' + i18nString(UIStrings.fromSignedexchange);\n      statusClasses.push('status-with-comment');\n    } else if (this.#request.webBundleInnerRequestInfo()) {\n      statusText += ' ' + i18nString(UIStrings.fromWebBundle);\n      statusClasses.push('status-with-comment');\n    } else if (this.#request.fromPrefetchCache()) {\n      statusText += ' ' + i18nString(UIStrings.fromPrefetchCache);\n      statusClasses.push('status-with-comment');\n    } else if (this.#request.cached()) {\n      statusText += ' ' + i18nString(UIStrings.fromDiskCache);\n      statusClasses.push('status-with-comment');\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <${Category.litTagName}\n        .data=${{\n          name: 'general',\n          title: i18nString(UIStrings.general),\n          forceOpen: this.#toReveal?.section === NetworkForward.UIRequestLocation.UIHeaderSection.General,\n        } as CategoryData}\n        aria-label=${i18nString(UIStrings.general)}\n      >\n        ${this.#renderGeneralRow(i18nString(UIStrings.requestUrl), this.#request.url())}\n        ${this.#request.statusCode? this.#renderGeneralRow(i18nString(UIStrings.requestMethod), this.#request.requestMethod) : LitHtml.nothing}\n        ${this.#request.statusCode? this.#renderGeneralRow(i18nString(UIStrings.statusCode), statusText, statusClasses) : LitHtml.nothing}\n        ${this.#request.remoteAddress()? this.#renderGeneralRow(i18nString(UIStrings.remoteAddress), this.#request.remoteAddress()) : LitHtml.nothing}\n        ${this.#request.referrerPolicy()? this.#renderGeneralRow(i18nString(UIStrings.referrerPolicy), String(this.#request.referrerPolicy())) : LitHtml.nothing}\n      </${Category.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderGeneralRow(name: Common.UIString.LocalizedString, value: string, classNames?: string[]): LitHtml.LitTemplate {\n    const isHighlighted = this.#toReveal?.section === NetworkForward.UIRequestLocation.UIHeaderSection.General &&\n        name.toLowerCase() === this.#toReveal?.header?.toLowerCase();\n    return html`\n      <div class=\"row ${isHighlighted ? 'header-highlight' : ''}\">\n        <div class=\"header-name\">${name}:</div>\n        <div\n          class=\"header-value ${classNames?.join(' ')}\"\n          @copy=${(): void => Host.userMetrics.actionTaken(Host.UserMetrics.Action.NetworkPanelCopyValue)}\n        >${value}</div>\n      </div>\n    `;\n  }\n}\n\nexport class ToggleRawHeadersEvent extends Event {\n  static readonly eventName = 'togglerawevent';\n\n  constructor() {\n    super(ToggleRawHeadersEvent.eventName, {});\n  }\n}\n\nexport interface CategoryData {\n  name: string;\n  title: Common.UIString.LocalizedString;\n  headerCount?: number;\n  checked?: boolean;\n  additionalContent?: LitHtml.LitTemplate;\n  forceOpen?: boolean;\n}\n\nexport class Category extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-request-headers-category`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #expandedSetting?: Common.Settings.Setting<boolean>;\n  #title: Common.UIString.LocalizedString = Common.UIString.LocalizedEmptyString;\n  #headerCount?: number = undefined;\n  #checked: boolean|undefined = undefined;\n  #additionalContent: LitHtml.LitTemplate|undefined = undefined;\n  #forceOpen: boolean|undefined = undefined;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [requestHeadersViewStyles, Input.checkboxStyles];\n  }\n\n  set data(data: CategoryData) {\n    this.#title = data.title;\n    this.#expandedSetting =\n        Common.Settings.Settings.instance().createSetting('request-info-' + data.name + '-category-expanded', true);\n    this.#headerCount = data.headerCount;\n    this.#checked = data.checked;\n    this.#additionalContent = data.additionalContent;\n    this.#forceOpen = data.forceOpen;\n    this.#render();\n  }\n\n  #onCheckboxToggle(): void {\n    this.dispatchEvent(new ToggleRawHeadersEvent());\n  }\n\n  #render(): void {\n    const isOpen = (this.#expandedSetting ? this.#expandedSetting.get() : true) || this.#forceOpen;\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <details ?open=${isOpen} @toggle=${this.#onToggle}>\n        <summary class=\"header\" @keydown=${this.#onSummaryKeyDown}>\n          <div class=\"header-grid-container\">\n            <div>\n              ${this.#title}${this.#headerCount !== undefined ?\n                html`<span class=\"header-count\"> (${this.#headerCount})</span>` :\n                LitHtml.nothing\n              }\n            </div>\n            <div class=\"hide-when-closed\">\n              ${this.#checked !== undefined ? html`\n                <label><input type=\"checkbox\" .checked=${this.#checked} @change=${this.#onCheckboxToggle} />${i18nString(UIStrings.raw)}</label>\n              ` : LitHtml.nothing}\n            </div>\n            <div class=\"hide-when-closed\">${this.#additionalContent}</div>\n        </summary>\n        <slot></slot>\n      </details>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #onSummaryKeyDown(event: KeyboardEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const summaryElement = event.target as HTMLElement;\n    const detailsElement = summaryElement.parentElement as HTMLDetailsElement;\n    if (!detailsElement) {\n      throw new Error('<details> element is not found for a <summary> element');\n    }\n    switch (event.key) {\n      case 'ArrowLeft':\n        detailsElement.open = false;\n        break;\n      case 'ArrowRight':\n        detailsElement.open = true;\n        break;\n    }\n  }\n\n  #onToggle(event: Event): void {\n    this.#expandedSetting?.set((event.target as HTMLDetailsElement).open);\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-request-headers', RequestHeadersComponent);\nComponentHelpers.CustomElements.defineComponent('devtools-request-headers-category', Category);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-request-headers': RequestHeadersComponent;\n    'devtools-request-headers-category': Category;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
