{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/network/components/HeaderSectionRow.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as ClientVariations from '../../../third_party/chromium/client-variations/client-variations.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\n\nimport {EditableSpan, type EditableSpanData} from './EditableSpan.js';\nimport headerSectionRowStyles from './HeaderSectionRow.css.js';\n\nconst {render, html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   *@description Comment used in decoded X-Client-Data HTTP header output in Headers View of the Network panel\n   */\n  activeClientExperimentVariation: 'Active `client experiment variation IDs`.',\n  /**\n   *@description Comment used in decoded X-Client-Data HTTP header output in Headers View of the Network panel\n   */\n  activeClientExperimentVariationIds: 'Active `client experiment variation IDs` that trigger server-side behavior.',\n  /**\n   *@description Text in Headers View of the Network panel for X-Client-Data HTTP headers\n   */\n  decoded: 'Decoded:',\n  /**\n   *@description The title of a button to enable overriding a HTTP header.\n   */\n  editHeader: 'Override header',\n  /**\n   *@description Description of which letters the name of an HTTP header may contain (a-z, A-Z, 0-9, '-', or '_').\n   */\n  headerNamesOnlyLetters: 'Header names should contain only letters, digits, dashes or underscores',\n  /**\n   *@description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n  /**\n   *@description Text for a link to the issues panel\n   */\n  learnMoreInTheIssuesTab: 'Learn more in the issues tab',\n  /**\n   *@description Hover text prompting the user to reload the whole page or refresh the particular request, so that the changes they made take effect.\n   */\n  reloadPrompt: 'Refresh the page/request for these changes to take effect',\n  /**\n   *@description The title of a button which removes a HTTP header override.\n   */\n  removeOverride: 'Remove this header override',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/network/components/HeaderSectionRow.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst trashIconUrl = new URL('../../../Images/trash_bin_material_icon.svg', import.meta.url).toString();\nconst editIconUrl = new URL('../../../Images/edit-icon.svg', import.meta.url).toString();\n\nexport const isValidHeaderName = (headerName: string): boolean => {\n  return /^[a-z0-9_\\-]+$/i.test(headerName);\n};\n\nexport const compareHeaders = (first: string|null|undefined, second: string|null|undefined): boolean => {\n  // Replaces non-breaking spaces(NBSPs) with regular spaces.\n  // When working with contenteditables, their content can contain (non-obvious) NBSPs.\n  // It would be tricky to get rid of NBSPs during editing and saving, so we just\n  // handle them after reading them in.\n  return first?.replaceAll('\\xa0', ' ') === second?.replaceAll('\\xa0', ' ');\n};\n\nexport class HeaderEditedEvent extends Event {\n  static readonly eventName = 'headeredited';\n  headerName: Platform.StringUtilities.LowerCaseString;\n  headerValue: string;\n\n  constructor(headerName: Platform.StringUtilities.LowerCaseString, headerValue: string) {\n    super(HeaderEditedEvent.eventName, {});\n    this.headerName = headerName;\n    this.headerValue = headerValue;\n  }\n}\n\nexport class HeaderRemovedEvent extends Event {\n  static readonly eventName = 'headerremoved';\n  headerName: Platform.StringUtilities.LowerCaseString;\n  headerValue: string;\n\n  constructor(headerName: Platform.StringUtilities.LowerCaseString, headerValue: string) {\n    super(HeaderRemovedEvent.eventName, {});\n    this.headerName = headerName;\n    this.headerValue = headerValue;\n  }\n}\n\nexport class EnableHeaderEditingEvent extends Event {\n  static readonly eventName = 'enableheaderediting';\n\n  constructor() {\n    super(EnableHeaderEditingEvent.eventName, {});\n  }\n}\n\nexport interface HeaderSectionRowData {\n  header: HeaderDescriptor;\n}\n\nexport class HeaderSectionRow extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-header-section-row`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #header: HeaderDescriptor|null = null;\n  readonly #boundRender = this.#render.bind(this);\n  #isHeaderValueEdited = false;\n  #isValidHeaderName = true;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [headerSectionRowStyles];\n  }\n\n  set data(data: HeaderSectionRowData) {\n    this.#header = data.header;\n    this.#isHeaderValueEdited =\n        this.#header.originalValue !== undefined && this.#header.value !== this.#header.originalValue;\n    this.#isValidHeaderName = isValidHeaderName(this.#header.name);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('HeaderSectionRow render was not scheduled');\n    }\n\n    if (!this.#header) {\n      return;\n    }\n\n    const rowClasses = LitHtml.Directives.classMap({\n      row: true,\n      'header-highlight': Boolean(this.#header.highlight),\n      'header-overridden': Boolean(this.#header.isOverride) || this.#isHeaderValueEdited,\n      'header-editable': Boolean(this.#header.valueEditable),\n      'header-deleted': Boolean(this.#header.isDeleted),\n    });\n\n    // The header name is only editable when the header value is editable as well.\n    // This ensures the header name's editability reacts correctly to enabling or\n    // disabling local overrides.\n    const isHeaderNameEditable = this.#header.nameEditable && this.#header.valueEditable;\n\n    // Case 1: Headers which were just now added via the 'Add header button'.\n    //         'nameEditable' is true only for such headers.\n    // Case 2: Headers for which the user clicked the 'remove' button.\n    // Case 3: Headers for which there is a mismatch between original header\n    //         value and current header value.\n    const showReloadInfoIcon = this.#header.nameEditable || this.#header.isDeleted || this.#isHeaderValueEdited;\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=${rowClasses}>\n        <div class=\"header-name\">\n          ${this.#header.headerNotSet ?\n            html`<div class=\"header-badge header-badge-text\">${i18n.i18n.lockedString('not-set')}</div> ` :\n            LitHtml.nothing\n          }\n          ${isHeaderNameEditable && !this.#isValidHeaderName ?\n            html`<${IconButton.Icon.Icon.litTagName} class=\"inline-icon disallowed-characters\" title=${UIStrings.headerNamesOnlyLetters} .data=${{\n              iconName: 'error_icon',\n              width: '12px',\n              height: '12px',\n            } as IconButton.Icon.IconData}>\n            </${IconButton.Icon.Icon.litTagName}>` : LitHtml.nothing\n          }\n          ${isHeaderNameEditable && !this.#header.isDeleted ?\n            html`<${EditableSpan.litTagName}\n              @focusout=${this.#onHeaderNameFocusOut}\n              @keydown=${this.#onKeyDown}\n              @input=${this.#onHeaderNameEdit}\n              @paste=${this.#onHeaderNameEdit}\n              .data=${{value: this.#header.name} as EditableSpanData}\n            ></${EditableSpan.litTagName}>` :\n            this.#header.name}:\n        </div>\n        <div\n          class=\"header-value ${this.#header.headerValueIncorrect ? 'header-warning' : ''}\"\n          @copy=${():void => Host.userMetrics.actionTaken(Host.UserMetrics.Action.NetworkPanelCopyValue)}\n        >\n          ${this.#renderHeaderValue()}\n        </div>\n        ${showReloadInfoIcon ?\n          html`<${IconButton.Icon.Icon.litTagName} class=\"row-flex-icon flex-right\" title=${UIStrings.reloadPrompt} .data=${{\n            iconName: 'info-icon',\n            width: '12px',\n            height: '12px',\n          } as IconButton.Icon.IconData}>\n          </${IconButton.Icon.Icon.litTagName}>` : LitHtml.nothing\n        }\n      </div>\n      ${this.#maybeRenderBlockedDetails(this.#header.blockedDetails)}\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #renderHeaderValue(): LitHtml.LitTemplate {\n    if (!this.#header) {\n      return LitHtml.nothing;\n    }\n    if (this.#header.isDeleted || !this.#header.valueEditable) {\n      // clang-format off\n      return html`\n      ${this.#header.value || ''}\n      ${this.#maybeRenderHeaderValueSuffix(this.#header)}\n      ${this.#header.isResponseHeader && !this.#header.isDeleted ? html`\n        <${Buttons.Button.Button.litTagName}\n          title=${i18nString(UIStrings.editHeader)}\n          .size=${Buttons.Button.Size.TINY}\n          .iconUrl=${editIconUrl}\n          .variant=${Buttons.Button.Variant.ROUND}\n          .iconWidth=${'13px'}\n          .iconHeight=${'13px'}\n          @click=${(): void => {\n            this.dispatchEvent(new EnableHeaderEditingEvent());\n          }}\n          class=\"enable-editing inline-button\"\n        ></${Buttons.Button.Button.litTagName}>\n      ` : LitHtml.nothing}\n    `;\n    }\n    return html`\n      <${EditableSpan.litTagName}\n        @focusout=${this.#onHeaderValueFocusOut}\n        @input=${this.#onHeaderValueEdit}\n        @paste=${this.#onHeaderValueEdit}\n        @keydown=${this.#onKeyDown}\n        .data=${{value: this.#header.value || ''} as EditableSpanData}\n      ></${EditableSpan.litTagName}>\n      ${this.#maybeRenderHeaderValueSuffix(this.#header)}\n      <${Buttons.Button.Button.litTagName}\n        title=${i18nString(UIStrings.removeOverride)}\n        .size=${Buttons.Button.Size.TINY}\n        .iconUrl=${trashIconUrl}\n        .variant=${Buttons.Button.Variant.ROUND}\n        .iconWidth=${'13px'}\n        .iconHeight=${'13px'}\n        class=\"remove-header inline-button\"\n        @click=${this.#onRemoveOverrideClick}\n      ></${Buttons.Button.Button.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  focus(): void {\n    requestAnimationFrame(() => {\n      const editableName = this.#shadow.querySelector<HTMLElement>('.header-name devtools-editable-span');\n      editableName?.focus();\n    });\n  }\n\n  #maybeRenderHeaderValueSuffix(header: HeaderDescriptor): LitHtml.LitTemplate {\n    if (header.name === 'set-cookie' && header.setCookieBlockedReasons) {\n      const titleText =\n          header.setCookieBlockedReasons.map(SDK.NetworkRequest.setCookieBlockedReasonToUiString).join('\\n');\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      return html`\n        <${IconButton.Icon.Icon.litTagName} class=\"row-flex-icon\" title=${titleText} .data=${{\n            iconName: 'clear-warning_icon',\n            width: '12px',\n            height: '12px',\n          } as IconButton.Icon.IconData}>\n        </${IconButton.Icon.Icon.litTagName}>\n      `;\n      // clang-format on\n    }\n\n    if (header.name === 'x-client-data') {\n      const data = ClientVariations.parseClientVariations(header.value || '');\n      const output = ClientVariations.formatClientVariations(\n          data, i18nString(UIStrings.activeClientExperimentVariation),\n          i18nString(UIStrings.activeClientExperimentVariationIds));\n      return html`\n        <div>${i18nString(UIStrings.decoded)}</div>\n        <code>${output}</code>\n      `;\n    }\n\n    return LitHtml.nothing;\n  }\n\n  #maybeRenderBlockedDetails(blockedDetails?: BlockedDetailsDescriptor): LitHtml.LitTemplate {\n    if (!blockedDetails) {\n      return LitHtml.nothing;\n    }\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <div class=\"call-to-action\">\n        <div class=\"call-to-action-body\">\n          <div class=\"explanation\">${blockedDetails.explanation()}</div>\n          ${blockedDetails.examples.map(example => html`\n            <div class=\"example\">\n              <code>${example.codeSnippet}</code>\n              ${example.comment ? html`\n                <span class=\"comment\">${example.comment()}</span>\n              ` : ''}\n            </div>\n          `)}\n          ${this.#maybeRenderBlockedDetailsLink(blockedDetails)}\n        </div>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #maybeRenderBlockedDetailsLink(blockedDetails?: BlockedDetailsDescriptor): LitHtml.LitTemplate {\n    if (blockedDetails?.reveal) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      return html`\n        <div class=\"devtools-link\" @click=${blockedDetails.reveal}>\n          <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${{\n            iconName: 'issue-exclamation-icon',\n            color: 'var(--issue-color-yellow)',\n            width: '16px',\n            height: '16px',\n          } as IconButton.Icon.IconData}>\n          </${IconButton.Icon.Icon.litTagName}\n          >${i18nString(UIStrings.learnMoreInTheIssuesTab)}\n        </div>\n      `;\n      // clang-format on\n    }\n    if (blockedDetails?.link) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      return html`\n        <x-link href=${blockedDetails.link.url} class=\"link\">\n          <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${{\n            iconName: 'link_icon',\n            color: 'var(--color-link)',\n            width: '16px',\n            height: '16px',\n          } as IconButton.Icon.IconData}>\n          </${IconButton.Icon.Icon.litTagName}\n          >${i18nString(UIStrings.learnMore)}\n        </x-link>\n      `;\n      // clang-format on\n    }\n    return LitHtml.nothing;\n  }\n\n  #onHeaderValueFocusOut(event: Event): void {\n    const target = event.target as EditableSpan;\n    if (!this.#header) {\n      return;\n    }\n    const headerValue = target.value.trim();\n    if (!compareHeaders(headerValue, this.#header.value?.trim())) {\n      this.#header.value = headerValue;\n      this.dispatchEvent(new HeaderEditedEvent(this.#header.name, headerValue));\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n\n    // Clear selection (needed when pressing 'enter' in editable span).\n    const selection = window.getSelection();\n    selection?.removeAllRanges();\n  }\n\n  #onHeaderNameFocusOut(event: Event): void {\n    const target = event.target as EditableSpan;\n    if (!this.#header) {\n      return;\n    }\n    const headerName = Platform.StringUtilities.toLowerCaseString(target.value.trim());\n    // If the header name has been edited to '', reset it to its previous value.\n    if (headerName === '') {\n      target.value = this.#header.name;\n    } else if (!compareHeaders(headerName, this.#header.name.trim())) {\n      this.#header.name = headerName;\n      this.dispatchEvent(new HeaderEditedEvent(headerName, this.#header.value || ''));\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n\n    // Clear selection (needed when pressing 'enter' in editable span).\n    const selection = window.getSelection();\n    selection?.removeAllRanges();\n  }\n\n  #onRemoveOverrideClick(): void {\n    if (!this.#header) {\n      return;\n    }\n    const headerValueElement = this.#shadow.querySelector('.header-value devtools-editable-span') as EditableSpan;\n    if (this.#header.originalValue) {\n      headerValueElement.value = this.#header?.originalValue;\n    }\n    this.dispatchEvent(new HeaderRemovedEvent(this.#header.name, this.#header.value || ''));\n  }\n\n  #onKeyDown(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    const target = event.target as EditableSpan;\n    if (keyboardEvent.key === 'Escape') {\n      event.consume();\n      if (target.matches('.header-name devtools-editable-span')) {\n        target.value = this.#header?.name || '';\n        this.#onHeaderNameEdit(event);\n      } else if (target.matches('.header-value devtools-editable-span')) {\n        target.value = this.#header?.value || '';\n        this.#onHeaderValueEdit(event);\n      }\n      target.blur();\n    }\n  }\n\n  #onHeaderNameEdit(event: Event): void {\n    const editable = event.target as EditableSpan;\n    const isValidName = isValidHeaderName(editable.value);\n    if (this.#isValidHeaderName !== isValidName) {\n      this.#isValidHeaderName = isValidName;\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n  }\n\n  #onHeaderValueEdit(event: Event): void {\n    const editable = event.target as EditableSpan;\n    const isEdited = this.#header?.originalValue !== undefined && this.#header?.originalValue !== editable.value;\n    if (this.#isHeaderValueEdited !== isEdited) {\n      this.#isHeaderValueEdited = isEdited;\n      if (this.#header) {\n        this.#header.highlight = false;\n      }\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-header-section-row', HeaderSectionRow);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-header-section-row': HeaderSectionRow;\n    'devtools-editable-span': EditableSpan;\n  }\n\n  interface HTMLElementEventMap {\n    [HeaderEditedEvent.eventName]: HeaderEditedEvent;\n  }\n}\n\ninterface BlockedDetailsDescriptor {\n  explanation: () => string;\n  examples: Array<{\n    codeSnippet: string,\n    comment?: () => string,\n  }>;\n  link: {\n    url: string,\n  }|null;\n  reveal?: () => void;\n}\n\nexport interface HeaderDetailsDescriptor {\n  name: Platform.StringUtilities.LowerCaseString;\n  value: string|null;\n  headerValueIncorrect?: boolean;\n  blockedDetails?: BlockedDetailsDescriptor;\n  headerNotSet?: boolean;\n  setCookieBlockedReasons?: Protocol.Network.SetCookieBlockedReason[];\n  highlight?: boolean;\n  isResponseHeader?: boolean;\n}\n\nexport interface HeaderEditorDescriptor {\n  name: Platform.StringUtilities.LowerCaseString;\n  value: string|null;\n  originalValue?: string|null;\n  isOverride?: boolean;\n  valueEditable?: boolean;\n  nameEditable?: boolean;\n  isDeleted?: boolean;\n}\n\nexport type HeaderDescriptor = HeaderDetailsDescriptor&HeaderEditorDescriptor;\n"],
  "mappings": "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",
  "names": []
}
