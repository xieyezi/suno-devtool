{
  "version": 3,
  "sources": ["../../../../../../../../front_end/panels/application/preloading/components/PreloadingDetailsReportView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as Coordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as ReportView from '../../../../ui/components/report_view/report_view.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport preloadingDetailsReportViewStyles from './preloadingDetailsReportView.css.js';\n\ntype PrerenderingAttempt = SDK.PrerenderingModel.PrerenderingAttempt;\n\nconst UIStrings = {\n  /**\n   *@description Text in PreloadingDetailsReportView of the Application panel\n   */\n  selectAnElementForMoreDetails: 'Select an element for more details',\n  /**\n   *@description Text in grid and details\n   */\n  statusPrerendering: 'Prerendering',\n  /**\n   *@description Text in grid and details\n   */\n  statusActivated: 'Activated',\n  /**\n   *@description Text in grid and details\n   */\n  statusDiscarded: 'Discarded',\n  /**\n   *@description Text in details\n   */\n  detailsBasicInformation: 'Basic information',\n  /**\n   *@description Text in details\n   */\n  detailsStartedAt: 'Started at',\n  /**\n   *@description Text in details\n   */\n  detailsTrigger: 'Trigger',\n  /**\n   *@description Text in details\n   */\n  detailsStatus: 'Status',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingDetailsReportView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass PrerenderingUIUtils {\n  static trigger(x: PrerenderingAttempt): string {\n    switch (x.trigger.kind) {\n      case 'PrerenderingTriggerSpecRules':\n        return i18n.i18n.lockedString('Speculation Rules');\n      case 'PrerenderingTriggerDUI':\n        return i18n.i18n.lockedString('Direct User Input');\n      case 'PrerenderingTriggerDSE':\n        return i18n.i18n.lockedString('Default Search Engine');\n      case 'PrerenderingTriggerOpaque':\n        return i18n.i18n.lockedString('Opaque');\n    }\n  }\n\n  static status(x: PrerenderingAttempt): string {\n    switch (x.status) {\n      case SDK.PrerenderingModel.PrerenderingStatus.Prerendering:\n        return i18nString(UIStrings.statusPrerendering);\n      case SDK.PrerenderingModel.PrerenderingStatus.Activated:\n        return i18nString(UIStrings.statusActivated);\n      case SDK.PrerenderingModel.PrerenderingStatus.Discarded:\n        return i18nString(UIStrings.statusDiscarded);\n    }\n  }\n}\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport type PreloadingDetailsReportViewData = PrerenderingAttempt|null;\n\nexport class PreloadingDetailsReportView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-resources-preloading-details-report-view`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: PreloadingDetailsReportViewData = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [preloadingDetailsReportViewStyles];\n  }\n\n  set data(data: PreloadingDetailsReportViewData) {\n    this.#data = data;\n    void this.#render();\n  }\n\n  async #render(): Promise<void> {\n    await coordinator.write('PreloadingDetailsReportView render', () => {\n      if (this.#data === null) {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        LitHtml.render(LitHtml.html`\n          <div class=\"preloading-noselected\">\n            <div>\n              <p>${i18nString(UIStrings.selectAnElementForMoreDetails)}</p>\n            </div>\n          </div>\n        `, this.#shadow, {host: this});\n        // clang-format on\n        return;\n      }\n\n      const startedAt = new Date(this.#data.startedAt).toLocaleString();\n      const trigger = PrerenderingUIUtils.trigger(this.#data);\n      const status = PrerenderingUIUtils.status(this.#data);\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        <${ReportView.ReportView.Report.litTagName} .data=${{reportTitle: 'Prerendering Attempt'} as ReportView.ReportView.ReportData}>\n          <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.detailsBasicInformation)}</${\n            ReportView.ReportView.ReportSectionHeader.litTagName}>\n\n          <${ReportView.ReportView.ReportKey.litTagName}>${i18n.i18n.lockedString('URL')}</${\n            ReportView.ReportView.ReportKey.litTagName}>\n          <${ReportView.ReportView.ReportValue.litTagName}>\n            <div class=\"text-ellipsis\" title=${this.#data.url}>${this.#data.url}</div>\n          </${ReportView.ReportView.ReportValue.litTagName}>\n\n          <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.detailsStartedAt)}</${\n            ReportView.ReportView.ReportKey.litTagName}>\n          <${ReportView.ReportView.ReportValue.litTagName}>\n            <div class=\"text-ellipsis\" title=\"\">\n              ${startedAt}\n            </div>\n          </${ReportView.ReportView.ReportValue.litTagName}>\n\n          <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.detailsTrigger)}</${\n            ReportView.ReportView.ReportKey.litTagName}>\n          <${ReportView.ReportView.ReportValue.litTagName}>\n            <div class=\"text-ellipsis\" title=\"\">\n              ${trigger}\n            </div>\n          </${ReportView.ReportView.ReportValue.litTagName}>\n\n          <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.detailsStatus)}</${\n            ReportView.ReportView.ReportKey.litTagName}>\n          <${ReportView.ReportView.ReportValue.litTagName}>\n            ${status}\n          </${ReportView.ReportView.ReportValue.litTagName}>\n\n          ${this.#maybeDiscardedReason()}\n        </${ReportView.ReportView.Report.litTagName}>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  #maybeDiscardedReason(): LitHtml.LitTemplate {\n    if (!this.#data) {\n      return LitHtml.nothing;\n    }\n\n    if (this.#data.discardedReason === null || this.#data.discardedReason === undefined) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n          <${ReportView.ReportView.ReportKey.litTagName}>${i18n.i18n.lockedString('Discarded reason')}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n          <${ReportView.ReportView.ReportValue.litTagName}>\n            ${this.#data.discardedReason}\n          </${ReportView.ReportView.ReportValue.litTagName}>\n    `;\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent(\n    'devtools-resources-preloading-details-report-view', PreloadingDetailsReportView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-details-report-view': PreloadingDetailsReportView;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
