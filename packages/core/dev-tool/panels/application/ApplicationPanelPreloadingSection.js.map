{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/ApplicationPanelPreloadingSection.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Platform from '../../core/platform/platform.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {type ResourcesPanel} from './ResourcesPanel.js';\n\nimport {PreloadingView} from './preloading/PreloadingView.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  prefetchingAndPrerendering: 'Prefetching & Prerendering',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ApplicationPanelPreloadingSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PreloadingTreeElement extends ApplicationPanelTreeElement {\n  private model?: SDK.PrerenderingModel.PrerenderingModel;\n  private view?: PreloadingView;\n\n  constructor(resourcesPanel: ResourcesPanel) {\n    super(resourcesPanel, i18nString(UIStrings.prefetchingAndPrerendering), false);\n\n    const icon = UI.Icon.Icon.create('mediumicon-fetch', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n\n    // TODO(https://crbug.com/1384419): Set link\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'preloading://' as Platform.DevToolsPath.UrlString;\n  }\n\n  initialize(model: SDK.PrerenderingModel.PrerenderingModel): void {\n    this.model = model;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n\n    if (!this.model) {\n      return false;\n    }\n\n    if (!this.view) {\n      this.view = new PreloadingView(this.model);\n    }\n\n    this.showView(this.view);\n    // TODO(https://crbug.com/1384419): Report metrics when the panel shown.\n\n    return false;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AAIA;AAGA;AAEA,MAAM,YAAY;AAAA,EAIhB,4BAA4B;AAAA;AAE9B,MAAM,OAAO,KAAK,KAAK,kBAAkB,2DAA2D;AACpG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,2CAAoC,4BAA4B;AAAA,EAC7D;AAAA,EACA;AAAA,EAER,YAAY,gBAAgC;AAC1C,UAAM,gBAAgB,WAAW,UAAU,6BAA6B;AAExE,UAAM,OAAO,GAAG,KAAK,KAAK,OAAO,oBAAoB;AACrD,SAAK,gBAAgB,CAAC;AAAA;AAAA,MAKpB,UAA2C;AAC7C,WAAO;AAAA;AAAA,EAGT,WAAW,OAAsD;AAC/D,SAAK,QAAQ;AAAA;AAAA,EAGf,SAAS,gBAAmC;AAC1C,UAAM,SAAS;AAEf,QAAI,CAAC,KAAK,OAAO;AACf,aAAO;AAAA;AAGT,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,eAAe,KAAK;AAAA;AAGtC,SAAK,SAAS,KAAK;AAGnB,WAAO;AAAA;AAAA;",
  "names": []
}
