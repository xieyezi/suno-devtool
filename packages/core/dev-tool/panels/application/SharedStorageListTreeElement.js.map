{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/SharedStorageListTreeElement.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type * as Platform from '../../core/platform/platform.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {type ResourcesPanel} from './ResourcesPanel.js';\nimport {SharedStorageEventsView} from './SharedStorageEventsView.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in SharedStorage Category View of the Application panel\n   */\n  sharedStorage: 'Shared Storage',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/SharedStorageListTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SharedStorageListTreeElement extends ApplicationPanelTreeElement {\n  readonly #expandedSetting: Common.Settings.Setting<boolean>;\n  readonly view: SharedStorageEventsView;\n\n  constructor(resourcesPanel: ResourcesPanel, expandedSettingsDefault = false) {\n    super(resourcesPanel, i18nString(UIStrings.sharedStorage), false);\n    this.#expandedSetting =\n        Common.Settings.Settings.instance().createSetting('resourcesSharedStorageExpanded', expandedSettingsDefault);\n    const sharedStorageIcon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.setLeadingIcons([sharedStorageIcon]);\n    this.view = new SharedStorageEventsView();\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'shared-storage://' as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showView(this.view);\n    return false;\n  }\n\n  onattach(): void {\n    super.onattach();\n    if (this.#expandedSetting.get()) {\n      this.expand();\n    }\n  }\n\n  onexpand(): void {\n    this.#expandedSetting.set(true);\n  }\n\n  oncollapse(): void {\n    this.#expandedSetting.set(false);\n  }\n\n  addEvent(event: Protocol.Storage.SharedStorageAccessedEvent): void {\n    this.view.addEvent(event);\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAKA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,eAAe;AAAA;AAEjB,MAAM,OAAO,KAAK,KAAK,kBAAkB,sDAAsD;AAC/F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,kDAA2C,4BAA4B;AAAA;AAAA,EAEnE;AAAA,EAET,YAAY,gBAAgC,0BAA0B,OAAO;AAC3E,UAAM,gBAAgB,WAAW,UAAU,gBAAgB;AAC3D,4BACI,OAAO,SAAS,SAAS,WAAW,cAAc,kCAAkC;AACxF,UAAM,oBAAoB,GAAG,KAAK,KAAK,OAAO,uBAAuB;AACrE,SAAK,gBAAgB,CAAC;AACtB,SAAK,OAAO,IAAI;AAAA;AAAA,MAGd,UAA2C;AAC7C,WAAO;AAAA;AAAA,EAGT,SAAS,gBAA4C;AACnD,UAAM,SAAS;AACf,SAAK,eAAe,SAAS,KAAK;AAClC,WAAO;AAAA;AAAA,EAGT,WAAiB;AACf,UAAM;AACN,QAAI,sBAAsB,OAAO;AAC/B,WAAK;AAAA;AAAA;AAAA,EAIT,WAAiB;AACf,0BAAsB,IAAI;AAAA;AAAA,EAG5B,aAAmB;AACjB,0BAAsB,IAAI;AAAA;AAAA,EAG5B,SAAS,OAA0D;AACjE,SAAK,KAAK,SAAS;AAAA;AAAA;",
  "names": []
}
