{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/SharedStorageTreeElement.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {type ResourcesPanel} from './ResourcesPanel.js';\nimport {SharedStorageItemsView} from './SharedStorageItemsView.js';\nimport {type SharedStorageForOrigin} from './SharedStorageModel.js';\n\nexport class SharedStorageTreeElement extends ApplicationPanelTreeElement {\n  view!: SharedStorageItemsView;\n\n  constructor(resourcesPanel: ResourcesPanel, sharedStorage: SharedStorageForOrigin) {\n    super(resourcesPanel, sharedStorage.securityOrigin, false);\n  }\n\n  static async createElement(resourcesPanel: ResourcesPanel, sharedStorage: SharedStorageForOrigin):\n      Promise<SharedStorageTreeElement> {\n    const treeElement = new SharedStorageTreeElement(resourcesPanel, sharedStorage);\n    treeElement.view = await SharedStorageItemsView.createView(sharedStorage);\n    return treeElement;\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'shared-storage://' as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showView(this.view);\n    return false;\n  }\n}\n"],
  "mappings": "AAMA;AAEA;AAGO,8CAAuC,4BAA4B;AAAA,EACxE;AAAA,EAEA,YAAY,gBAAgC,eAAuC;AACjF,UAAM,gBAAgB,cAAc,gBAAgB;AAAA;AAAA,eAGzC,cAAc,gBAAgC,eACrB;AACpC,UAAM,cAAc,IAAI,yBAAyB,gBAAgB;AACjE,gBAAY,OAAO,MAAM,uBAAuB,WAAW;AAC3D,WAAO;AAAA;AAAA,MAGL,UAA2C;AAC7C,WAAO;AAAA;AAAA,EAGT,SAAS,gBAA4C;AACnD,UAAM,SAAS;AACf,SAAK,eAAe,SAAS,KAAK;AAClC,WAAO;AAAA;AAAA;",
  "names": []
}
