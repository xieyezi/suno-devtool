{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/application/components/SharedStorageMetadataView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as ReportView from '../../../ui/components/report_view/report_view.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\n\nimport sharedStorageMetadataViewStyles from './sharedStorageMetadataView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in SharedStorage Metadata View of the Application panel\n   */\n  sharedStorage: 'Shared Storage',\n  /**\n   *@description Section header for Metadata\n   */\n  metadata: 'Metadata',\n  /**\n   *@description The origin of a URL (https://web.dev/same-site-same-origin/#origin)\n   *(for a lot of languages this does not need to be translated, please translate only where necessary)\n   */\n  origin: 'Origin',\n  /**\n   *@description The time when the origin most recently created its shared storage database\n   */\n  creation: 'Creation Time',\n  /**\n   *@description The placeholder text if there is no creation time because the origin is not yet using shared storage.\n   */\n  notYetCreated: 'Not yet created',\n  /**\n   *@description The number of entries currently in the origin's database\n   */\n  numEntries: 'Number of Entries',\n  /**\n   *@description The number of bits remaining in the origin's shared storage privacy budget\n   */\n  entropyBudget: 'Entropy Budget for Fenced Frames',\n  /**\n   *@description Hover text for `entropyBudget` giving a more detailed explanation\n   */\n  budgetExplanation: 'Remaining data leakage allowed within a 24-hour period for this origin in bits of entropy',\n  /**\n   *@description Section header above Entries\n   */\n  entries: 'Entries',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/SharedStorageMetadataView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface SharedStorageMetadataGetter {\n  getMetadata: () => Promise<Protocol.Storage.SharedStorageMetadata|null>;\n}\n\nexport class SharedStorageMetadataView extends UI.Widget.VBox {\n  readonly #reportView = new SharedStorageMetadataReportView();\n  #sharedStorageMetadataGetter: SharedStorageMetadataGetter;\n\n  constructor(sharedStorageMetadataGetter: SharedStorageMetadataGetter, owner: string) {\n    super();\n    this.#sharedStorageMetadataGetter = sharedStorageMetadataGetter;\n    this.contentElement.classList.add('overflow-auto');\n    this.contentElement.appendChild(this.#reportView);\n    this.#reportView.origin = owner;\n    void this.doUpdate();\n  }\n\n  async doUpdate(): Promise<void> {\n    const metadata = await this.#sharedStorageMetadataGetter.getMetadata();\n    const creationTime = metadata?.creationTime ?? null;\n    const length = metadata?.length ?? 0;\n    const remainingBudget = metadata?.remainingBudget ?? 0;\n    this.#reportView.data = {creationTime, length, remainingBudget};\n  }\n}\n\nexport interface SharedStorageMetadataViewData {\n  creationTime: Protocol.Network.TimeSinceEpoch|null;\n  length: number;\n  remainingBudget: number;\n}\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport class SharedStorageMetadataReportView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-shared-storage-metadata-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #origin: string = '';\n  #creationTime: Protocol.Network.TimeSinceEpoch|null = null;\n  #length: number = 0;\n  #remainingBudget: number = 0;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [sharedStorageMetadataViewStyles];\n  }\n\n  set data(data: SharedStorageMetadataViewData) {\n    if (data.creationTime) {\n      this.#creationTime = data.creationTime;\n      this.#length = data.length;\n      this.#remainingBudget = data.remainingBudget;\n    }\n    void this.#render();\n  }\n\n  set origin(origin: string) {\n    this.#origin = origin;\n  }\n\n  async #render(): Promise<void> {\n    await coordinator.write('SharedStorageMetadataView render', () => {\n      const titleForReport = {reportTitle: i18nString(UIStrings.sharedStorage)} as ReportView.ReportView.ReportData;\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        <${ReportView.ReportView.Report.litTagName} .data=${titleForReport as ReportView.ReportView.ReportData}>\n          ${this.#renderMetadataSection()}\n          ${this.#renderEntriesSection()}\n        </${ReportView.ReportView.Report.litTagName}>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  #renderMetadataSection(): LitHtml.LitTemplate {\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.metadata)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.origin)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n          <div class=\"text-ellipsis\" title=${this.#origin}>${this.#origin}</div>\n      </${ReportView.ReportView.ReportValue.litTagName}>\n     <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.creation)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n     <${ReportView.ReportView.ReportValue.litTagName}>\n     ${this.#renderDateForCreationTime()}</${ReportView.ReportView.ReportValue.litTagName}>\n     <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.numEntries)}\n     </${ReportView.ReportView.ReportKey.litTagName}>\n     <${ReportView.ReportView.ReportValue.litTagName}>${this.#length}</${ReportView.ReportView.ReportValue.litTagName}>\n     <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.entropyBudget)}<${\n        IconButton.Icon.Icon.litTagName} class=\"info-icon\" title=${i18nString(UIStrings.budgetExplanation)}\n          .data=${\n        {iconName: 'ic_info_black_18dp', color: 'var(--color-link)', width: '14px'} as IconButton.Icon.IconWithName}>\n        </${IconButton.Icon.Icon.litTagName}></${ReportView.ReportView.ReportKey.litTagName}><${\n        ReportView.ReportView.ReportValue.litTagName}>${this.#remainingBudget}</${\n        ReportView.ReportView.ReportValue.litTagName}>\n      <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n        ReportView.ReportView.ReportSectionDivider.litTagName}>\n    `;\n  }\n\n  #renderDateForCreationTime(): LitHtml.LitTemplate {\n    if (!this.#creationTime) {\n      return LitHtml.html`${i18nString(UIStrings.notYetCreated)}`;\n    }\n    const date = new Date(1e3 * (this.#creationTime as number));\n    return LitHtml.html`${date.toLocaleString()}`;\n  }\n\n  #renderEntriesSection(): LitHtml.LitTemplate {\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName} title=${i18nString(UIStrings.entries)}>\n        ${i18nString(UIStrings.entries)}</${ReportView.ReportView.ReportSectionHeader.litTagName}>\n    `;\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent(\n    'devtools-shared-storage-metadata-view', SharedStorageMetadataReportView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-shared-storage-metadata-view': SharedStorageMetadataReportView;\n  }\n}\n"],
  "mappings": "AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,eAAe;AAAA,EAIf,UAAU;AAAA,EAKV,QAAQ;AAAA,EAIR,UAAU;AAAA,EAIV,eAAe;AAAA,EAIf,YAAY;AAAA,EAIZ,eAAe;AAAA,EAIf,mBAAmB;AAAA,EAInB,SAAS;AAAA;AAEX,MAAM,OAAO,KAAK,KAAK,kBAAkB,8DAA8D;AACvG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAMzD,+CAAwC,GAAG,OAAO,KAAK;AAAA,gBACrC,IAAI;AAAA;AAAA,EAG3B,YAAY,6BAA0D,OAAe;AACnF;AACA,wCAAoC;AACpC,SAAK,eAAe,UAAU,IAAI;AAClC,SAAK,eAAe,YAAY;AAChC,qBAAiB,SAAS;AAC1B,SAAK,KAAK;AAAA;AAAA,QAGN,WAA0B;AAC9B,UAAM,WAAW,MAAM,kCAAkC;AACzD,UAAM,eAAe,UAAU,gBAAgB;AAC/C,UAAM,SAAS,UAAU,UAAU;AACnC,UAAM,kBAAkB,UAAU,mBAAmB;AACrD,qBAAiB,OAAO,EAAC,cAAc,QAAQ;AAAA;AAAA;AAUnD,MAAM,cAAc,YAAY,kBAAkB,kBAAkB;AAE7D,qDAA8C,YAAY;AAAA,SAC/C,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,YAC1B;AAAA,kBACoC;AAAA,YACpC;AAAA,qBACS;AAAA,EAE3B,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,MAGjC,KAAK,MAAqC;AAC5C,QAAI,KAAK,cAAc;AACrB,2BAAqB,KAAK;AAC1B,qBAAe,KAAK;AACpB,8BAAwB,KAAK;AAAA;AAE/B,SAAK;AAAA;AAAA,MAGH,OAAO,QAAgB;AACzB,mBAAe;AAAA;AAAA,kBAGc;AAC7B,UAAM,YAAY,MAAM,oCAAoC,MAAM;AAChE,YAAM,iBAAiB,EAAC,aAAa,WAAW,UAAU;AAI1D,cAAQ,OAAO,QAAQ;AAAA,WAClB,WAAW,WAAW,OAAO,oBAAoB;AAAA,YAChD;AAAA,YACA;AAAA,YACA,WAAW,WAAW,OAAO;AAAA,SAChC,cAAc,EAAC,MAAM;AAAA;AAAA;AAAA,2BAKkB;AAC5C,WAAO,QAAQ;AAAA,SACV,WAAW,WAAW,oBAAoB,cAAc,WAAW,UAAU,cAC9E,WAAW,WAAW,oBAAoB;AAAA,SACzC,WAAW,WAAW,UAAU,cAAc,WAAW,UAAU,YACpE,WAAW,WAAW,UAAU;AAAA,SAC/B,WAAW,WAAW,YAAY;AAAA,6CACE,gBAAgB;AAAA,UACnD,WAAW,WAAW,YAAY;AAAA,QACpC,WAAW,WAAW,UAAU,cAAc,WAAW,UAAU,cACnE,WAAW,WAAW,UAAU;AAAA,QAChC,WAAW,WAAW,YAAY;AAAA,OACnC,sCAAsC,WAAW,WAAW,YAAY;AAAA,QACvE,WAAW,WAAW,UAAU,cAAc,WAAW,UAAU;AAAA,SAClE,WAAW,WAAW,UAAU;AAAA,QACjC,WAAW,WAAW,YAAY,cAAc,iBAAiB,WAAW,WAAW,YAAY;AAAA,QACnG,WAAW,WAAW,UAAU,cAAc,WAAW,UAAU,kBACnE,WAAW,KAAK,KAAK,sCAAsC,WAAW,UAAU;AAAA,kBAEhF,EAAC,UAAU,sBAAsB,OAAO,qBAAqB,OAAO;AAAA,YAChE,WAAW,KAAK,KAAK,gBAAgB,WAAW,WAAW,UAAU,eACzE,WAAW,WAAW,YAAY,cAAc,0BAChD,WAAW,WAAW,YAAY;AAAA,SACjC,WAAW,WAAW,qBAAqB,gBAC5C,WAAW,WAAW,qBAAqB;AAAA;AAAA;AAAA,+BAIC;AAChD,QAAI,CAAC,oBAAoB;AACvB,aAAO,QAAQ,OAAO,WAAW,UAAU;AAAA;AAE7C,UAAM,OAAO,IAAI,KAAK,MAAO;AAC7B,WAAO,QAAQ,OAAO,KAAK;AAAA;AAAA,0BAGgB;AAC3C,WAAO,QAAQ;AAAA,SACV,WAAW,WAAW,oBAAoB,oBAAoB,WAAW,UAAU;AAAA,UAClF,WAAW,UAAU,aAAa,WAAW,WAAW,oBAAoB;AAAA;AAAA;AAAA;AAKtF,iBAAiB,eAAe,gBAC5B,yCAAyC;",
  "names": []
}
