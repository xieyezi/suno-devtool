{
  "version": 3,
  "sources": ["../../../../../../../front_end/models/trace/handlers/ScreenshotsHandler.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {data as metaHandlerData} from './MetaHandler.js';\nimport {type TraceEventHandlerName} from './types.js';\n\nimport * as Helpers from '../helpers/helpers.js';\nimport * as Types from '../types/types.js';\n\n// Each thread contains events. Events indicate the thread and process IDs, which are\n// used to store the event in the correct process thread entry below.\nconst eventsInProcessThread =\n    new Map<Types.TraceEvents.ProcessID, Map<Types.TraceEvents.ThreadID, Types.TraceEvents.TraceEventSnapshot[]>>();\n\nlet snapshots: Types.TraceEvents.TraceEventSnapshot[] = [];\nexport function reset(): void {\n  eventsInProcessThread.clear();\n  snapshots.length = 0;\n}\n\nexport function handleEvent(event: Types.TraceEvents.TraceEventData): void {\n  if (event.ph !== Types.TraceEvents.TraceEventPhase.OBJECT_SNAPSHOT || event.name !== 'Screenshot') {\n    return;\n  }\n\n  Helpers.Trace.addEventToProcessThread(event, eventsInProcessThread);\n}\n\nexport async function finalize(): Promise<void> {\n  const {browserProcessId, browserThreadId} = metaHandlerData();\n  const browserThreads = eventsInProcessThread.get(browserProcessId);\n  if (browserThreads) {\n    snapshots = browserThreads.get(browserThreadId) || [];\n  }\n}\n\nexport function data(): Types.TraceEvents.TraceEventSnapshot[] {\n  return [...snapshots];\n}\n\nexport function deps(): TraceEventHandlerName[] {\n  return ['Meta'];\n}\n"],
  "mappings": "AAIA;AAGA;AACA;AAIA,MAAM,wBACF,oBAAI;AAER,IAAI,YAAoD;AACjD,wBAAuB;AAC5B,wBAAsB;AACtB,YAAU,SAAS;AAAA;AAGd,4BAAqB,OAA+C;AACzE,MAAI,MAAM,OAAO,MAAM,YAAY,gBAAgB,mBAAmB,MAAM,SAAS,cAAc;AACjG;AAAA;AAGF,UAAQ,MAAM,wBAAwB,OAAO;AAAA;AAG/C,iCAAgD;AAC9C,QAAM,EAAC,kBAAkB,oBAAmB;AAC5C,QAAM,iBAAiB,sBAAsB,IAAI;AACjD,MAAI,gBAAgB;AAClB,gBAAY,eAAe,IAAI,oBAAoB;AAAA;AAAA;AAIhD,uBAAwD;AAC7D,SAAO,CAAC,GAAG;AAAA;AAGN,uBAAyC;AAC9C,SAAO,CAAC;AAAA;",
  "names": []
}
