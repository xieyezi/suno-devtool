{
  "version": 3,
  "sources": ["../../../../../../front_end/models/extensions/RecorderPluginManager.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {type RecorderExtensionEndpoint} from './RecorderExtensionEndpoint.js';\nimport * as Common from '../../core/common/common.js';\n\nlet instance: RecorderPluginManager|null = null;\n\nexport class RecorderPluginManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #plugins: Set<RecorderExtensionEndpoint> = new Set();\n\n  static instance(): RecorderPluginManager {\n    if (!instance) {\n      instance = new RecorderPluginManager();\n    }\n    return instance;\n  }\n\n  addPlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.add(plugin);\n    this.dispatchEventToListeners(Events.PluginAdded, plugin);\n  }\n\n  removePlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.delete(plugin);\n    this.dispatchEventToListeners(Events.PluginRemoved, plugin);\n  }\n\n  plugins(): RecorderExtensionEndpoint[] {\n    return Array.from(this.#plugins.values());\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  PluginAdded = 'pluginAdded',\n  PluginRemoved = 'pluginRemoved',\n}\n\nexport type EventTypes = {\n  [Events.PluginAdded]: RecorderExtensionEndpoint,\n  [Events.PluginRemoved]: RecorderExtensionEndpoint,\n};\n"],
  "mappings": "AAKA;AAEA,IAAI,WAAuC;AAEpC,2CAAoC,OAAO,cAAc,cAA0B;AAAA,aAC7C,oBAAI;AAAA,SAExC,WAAkC;AACvC,QAAI,CAAC,UAAU;AACb,iBAAW,IAAI;AAAA;AAEjB,WAAO;AAAA;AAAA,EAGT,UAAU,QAAyC;AACjD,kBAAc,IAAI;AAClB,SAAK,yBAAyB,OAAO,aAAa;AAAA;AAAA,EAGpD,aAAa,QAAyC;AACpD,kBAAc,OAAO;AACrB,SAAK,yBAAyB,OAAO,eAAe;AAAA;AAAA,EAGtD,UAAuC;AACrC,WAAO,MAAM,KAAK,cAAc;AAAA;AAAA;AAM7B,WAAK,SAAL,kBAAK,YAAL;AACL,2BAAc;AACd,6BAAgB;AAFN;AAAA;",
  "names": []
}
